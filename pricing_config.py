# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ü–µ–Ω –∏ –∫—Ä–µ–¥–∏—Ç–æ–≤
CREDIT_PACKAGES = {
    'small': {
        'name': 'ü™ô –ú–∞–ª—ã–π –ø–∞–∫–µ—Ç',
        'credits': 2000,
        'price': 1129.0,
        'currency': 'RUB',
        'price_per_credit': 0.5645,
        'description': '2000 –∫—Ä–µ–¥–∏—Ç–æ–≤ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã',
        'original_price': 1129.0,
        'discount_percent': 0,
        'savings': 0
    },
    'medium': {
        'name': 'ü™ô –°—Ä–µ–¥–Ω–∏–π –ø–∞–∫–µ—Ç',
        'credits': 5000,
        'price': 2420.0,
        'currency': 'RUB',
        'price_per_credit': 0.484,
        'description': '5000 –∫—Ä–µ–¥–∏—Ç–æ–≤ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
        'original_price': 2420.0,
        'discount_percent': 0,
        'savings': 0
    },
    'large': {
        'name': 'ü™ô –ë–æ–ª—å—à–æ–π –ø–∞–∫–µ—Ç',
        'credits': 10000,
        'price': 4030.0,
        'currency': 'RUB',
        'price_per_credit': 0.403,
        'description': '10000 –∫—Ä–µ–¥–∏—Ç–æ–≤ –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤',
        'original_price': 4030.0,
        'discount_percent': 0,
        'savings': 0
    }
}

# –°—Ç–æ–∏–º–æ—Å—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞ –∫—Ä–µ–¥–∏—Ç –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
GENERATION_COSTS = {
    'Ideogram': 10,                    # 10 –∫—Ä–µ–¥–∏—Ç–æ–≤ –∑–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
    'Bytedance (Seedream-3)': 10,     # 10 –∫—Ä–µ–¥–∏—Ç–æ–≤ –∑–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
    'Luma Photon': 10,                 # 10 –∫—Ä–µ–¥–∏—Ç–æ–≤ –∑–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
    'Bria 3.2': 12,                   # 12 –∫—Ä–µ–¥–∏—Ç–æ–≤ –∑–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
    'Google Imagen 4 Ultra': 16,      # 16 –∫—Ä–µ–¥–∏—Ç–æ–≤ –∑–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
    'Recraft AI': 20,                  # 20 –∫—Ä–µ–¥–∏—Ç–æ–≤ –∑–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
    'real-esrgan': 15,                 # 15 –∫—Ä–µ–¥–∏—Ç–æ–≤ –∑–∞ –∞–ø—Å–∫–µ–π–ª
    'gfpgan': 20,                      # 20 –∫—Ä–µ–¥–∏—Ç–æ–≤ –∑–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–∏—Ü–∞
    'codeformer': 25,                  # 25 –∫—Ä–µ–¥–∏—Ç–æ–≤ –∑–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–∏—Ü–∞
    'video': 200                       # 200 –∫—Ä–µ–¥–∏—Ç–æ–≤ –∑–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–∏–¥–µ–æ
}

# –°—Ç–æ–∏–º–æ—Å—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –≤–∏–¥–µ–æ Bytedance (–≤ –∫—Ä–µ–¥–∏—Ç–∞—Ö)
VIDEO_GENERATION_COSTS = {
    'Bytedance 480p 5s': 37,
    'Bytedance 720p 5s': 71,
    'Bytedance 1080p 5s': 172,
    'Bytedance 480p 10s': 71,
    'Bytedance 720p 10s': 138,
    'Bytedance 1080p 10s': 342
}

# –°—Ç–æ–∏–º–æ—Å—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –ø–æ —Ñ–æ—Ä–º–∞—Ç–∞–º (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∫ –º–æ–¥–µ–ª–∏)
FORMAT_COSTS = {
    'Instagram Reels': 0,
    'TikTok': 0,
    'YouTube Shorts': 0,
    'Instagram Post': 0,
    'Instagram Stories': 0,
    '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è': 0,
    'custom': 0
}

# –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ª–∏–º–∏—Ç—ã –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
FREE_LIMITS = {
    'total_generations': 3,  # –í—Å–µ–≥–æ 3 –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–∞–≤—Å–µ–≥–¥–∞
    'models_available': ['Ideogram'],  # –¢–æ–ª—å–∫–æ –±–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å
    'formats_available': ['Instagram Post', '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è']  # –ë–∞–∑–æ–≤—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∞–ª—é—Ç—ã
CURRENCY_SYMBOL = '‚ÇΩ'  # –°–∏–º–≤–æ–ª —Ä—É–±–ª—è
CURRENCY_NAME = 'RUB'  # –ö–æ–¥ –≤–∞–ª—é—Ç—ã

def get_credit_package_by_type(package_type: str) -> dict:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–∞ –∫—Ä–µ–¥–∏—Ç–æ–≤ –ø–æ —Ç–∏–ø—É"""
    return CREDIT_PACKAGES.get(package_type, {})

def get_generation_cost(model: str, format_type: str = None, video_quality: str = None, video_duration: str = None) -> int:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –≤–∏–¥–µ–æ Bytedance
    if model == 'Bytedance (Seedream-3)' and video_quality and video_duration:
        video_key = f'Bytedance {video_quality} {video_duration}'
        if video_key in VIDEO_GENERATION_COSTS:
            return VIDEO_GENERATION_COSTS[video_key]
    
    # –î–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –º–æ–¥–µ–ª–∏
    base_cost = GENERATION_COSTS.get(model, 10)  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 10 –∫—Ä–µ–¥–∏—Ç–æ–≤
    format_cost = FORMAT_COSTS.get(format_type, 0)
    return base_cost + format_cost

def format_price(amount: float, currency: str = 'RUB') -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ü–µ–Ω—É —Å —Å–∏–º–≤–æ–ª–æ–º –≤–∞–ª—é—Ç—ã"""
    if currency == 'RUB':
        return f"‚ÇΩ{amount:.0f}"  # –ë–µ–∑ –∫–æ–ø–µ–µ–∫ –¥–ª—è —Ä—É–±–ª–µ–π
    elif currency == 'UAH':
        return f"‚Ç¥{amount:.2f}"
    elif currency == 'USD':
        return f"${amount:.2f}"
    elif currency == 'EUR':
        return f"‚Ç¨{amount:.2f}"
    else:
        return f"{amount:.2f} {currency}"

def convert_currency(amount: float, from_currency: str, to_currency: str) -> float:
    """–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∞–ª—é—Ç"""
    if from_currency == to_currency:
        return amount
    
    # –ü—Ä–æ—Å—Ç–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–∞–ª—é—Ç
    # –í –±—É–¥—É—â–µ–º –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∫—É—Ä—Å–æ–≤
    if from_currency == 'RUB' and to_currency == 'USD':
        return amount / 100  # –ü—Ä–∏–º–µ—Ä–Ω—ã–π –∫—É—Ä—Å 100 RUB = 1 USD
    elif from_currency == 'USD' and to_currency == 'RUB':
        return amount * 100
    elif from_currency == 'UAH' and to_currency == 'RUB':
        return amount * 2.4  # –ü—Ä–∏–º–µ—Ä–Ω—ã–π –∫—É—Ä—Å 1 UAH = 2.4 RUB
    elif from_currency == 'RUB' and to_currency == 'UAH':
        return amount / 2.4
    
    return amount  # –ï—Å–ª–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—É—é —Å—É–º–º—É

def get_available_credit_packages() -> list:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –∫—Ä–µ–¥–∏—Ç–æ–≤"""
    return list(CREDIT_PACKAGES.values())

def calculate_discount(original_price: float, discounted_price: float) -> int:
    """–†–∞—Å—á–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–∞ —Å–∫–∏–¥–∫–∏"""
    if original_price <= 0:
        return 0
    
    discount_percent = ((original_price - discounted_price) / original_price) * 100
    return int(discount_percent)

# –î–æ–±–∞–≤–ª—è–µ–º —Å–∫–∏–¥–∫–∏ –∫ –ø–∞–∫–µ—Ç–∞–º –∫—Ä–µ–¥–∏—Ç–æ–≤
for package_type, package in CREDIT_PACKAGES.items():
    if package_type != 'small':
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–∫–∏–¥–∫—É –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –±–∞–∑–æ–≤–æ–π —Ü–µ–Ω—ã
        base_price = CREDIT_PACKAGES['small']['price_per_credit'] * package['credits']
        package['original_price'] = base_price
        package['discount_percent'] = calculate_discount(base_price, package['price'])
        package['savings'] = base_price - package['price']
    else:
        package['original_price'] = package['price']
        package['discount_percent'] = 0
        package['savings'] = 0
