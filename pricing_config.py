# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ü–µ–Ω –¥–ª—è AI Image Generator Bot

# –ü–∞–∫–µ—Ç—ã –∫—Ä–µ–¥–∏—Ç–æ–≤ (pay-per-use –º–æ–¥–µ–ª—å)
CREDIT_PACKAGES = {
    'small': {
        'name': 'ü™ô –ú–∞–ª—ã–π –ø–∞–∫–µ—Ç',
        'credits': 2000,
        'price': 14.0,
        'currency': 'UAH',
        'price_per_credit': 0.007,
        'description': '2000 –∫—Ä–µ–¥–∏—Ç–æ–≤ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã'
    },
    'medium': {
        'name': 'ü™ô –°—Ä–µ–¥–Ω–∏–π –ø–∞–∫–µ—Ç',
        'credits': 5000,
        'price': 30.0,
        'currency': 'UAH',
        'price_per_credit': 0.006,
        'description': '5000 –∫—Ä–µ–¥–∏—Ç–æ–≤ —Å–æ —Å–∫–∏–¥–∫–æ–π 14%'
    },
    'large': {
        'name': 'ü™ô –ë–æ–ª—å—à–æ–π –ø–∞–∫–µ—Ç',
        'credits': 10000,
        'price': 50.0,
        'currency': 'UAH',
        'price_per_credit': 0.005,
        'description': '10000 –∫—Ä–µ–¥–∏—Ç–æ–≤ —Å–æ —Å–∫–∏–¥–∫–æ–π 29%'
    }
}

# –°—Ç–æ–∏–º–æ—Å—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –ø–æ –º–æ–¥–µ–ª—è–º (–≤ –∫—Ä–µ–¥–∏—Ç–∞—Ö)
GENERATION_COSTS = {
    'Ideogram': 10,
    'Bytedance (Seedream-3)': 10,
    'Luma Photon': 10,
    'Bria 3.2': 12,
    'Google Imagen 4 Ultra': 16,
    'Recraft AI': 20,
    'FLUX.1 Kontext Pro': 12  # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
}

# –°—Ç–æ–∏–º–æ—Å—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –≤–∏–¥–µ–æ Bytedance (–≤ –∫—Ä–µ–¥–∏—Ç–∞—Ö)
VIDEO_GENERATION_COSTS = {
    'Bytedance 480p 5s': 37,
    'Bytedance 720p 5s': 71,
    'Bytedance 1080p 5s': 172,
    'Bytedance 480p 10s': 71,
    'Bytedance 720p 10s': 138,
    'Bytedance 1080p 10s': 342
}

# –°—Ç–æ–∏–º–æ—Å—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –ø–æ —Ñ–æ—Ä–º–∞—Ç–∞–º (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∫ –º–æ–¥–µ–ª–∏)
FORMAT_COSTS = {
    'Instagram Reels': 0,
    'TikTok': 0,
    'YouTube Shorts': 0,
    'Instagram Post': 0,
    'Instagram Stories': 0,
    '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è': 0,
    'custom': 0
}

# –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ª–∏–º–∏—Ç—ã –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
FREE_LIMITS = {
    'total_generations': 3,  # –í—Å–µ–≥–æ 3 –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–∞–≤—Å–µ–≥–¥–∞
    'models_available': ['Ideogram'],  # –¢–æ–ª—å–∫–æ –±–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å
    'formats_available': ['Instagram Post', '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è']  # –ë–∞–∑–æ–≤—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∞–ª—é—Ç
CURRENCY_SETTINGS = {
    'UAH': {
        'symbol': '‚Ç¥',
        'name': '–£–∫—Ä–∞–∏–Ω—Å–∫–∞—è –≥—Ä–∏–≤–Ω–∞',
        'exchange_rate': 1.0
    },
    'USD': {
        'symbol': '$',
        'name': '–î–æ–ª–ª–∞—Ä –°–®–ê',
        'exchange_rate': 0.026  # –ü—Ä–∏–º–µ—Ä–Ω—ã–π –∫—É—Ä—Å 1 UAH = 0.026 USD
    },
    'RUB': {
        'symbol': '‚ÇΩ',
        'name': '–†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å',
        'exchange_rate': 2.4  # –ü—Ä–∏–º–µ—Ä–Ω—ã–π –∫—É—Ä—Å 1 UAH = 2.4 RUB
    },
    'EUR': {
        'symbol': '‚Ç¨',
        'name': '–ï–≤—Ä–æ',
        'exchange_rate': 0.024  # –ü—Ä–∏–º–µ—Ä–Ω—ã–π –∫—É—Ä—Å 1 UAH = 0.024 EUR
    }
}

def get_credit_package_by_type(package_type: str) -> dict:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–∞ –∫—Ä–µ–¥–∏—Ç–æ–≤ –ø–æ —Ç–∏–ø—É"""
    return CREDIT_PACKAGES.get(package_type, {})

def get_generation_cost(model: str, format_type: str = None, video_quality: str = None, video_duration: str = None) -> int:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –≤–∏–¥–µ–æ Bytedance
    if model == 'Bytedance (Seedream-3)' and video_quality and video_duration:
        video_key = f'Bytedance {video_quality} {video_duration}'
        if video_key in VIDEO_GENERATION_COSTS:
            return VIDEO_GENERATION_COSTS[video_key]
    
    # –î–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –º–æ–¥–µ–ª–∏
    base_cost = GENERATION_COSTS.get(model, 10)  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 10 –∫—Ä–µ–¥–∏—Ç–æ–≤
    format_cost = FORMAT_COSTS.get(format_type, 0)
    return base_cost + format_cost

def format_price(amount: float, currency: str = 'UAH') -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ü–µ–Ω—É —Å —Å–∏–º–≤–æ–ª–æ–º –≤–∞–ª—é—Ç—ã"""
    currency_info = CURRENCY_SETTINGS.get(currency, CURRENCY_SETTINGS['UAH'])
    
    if currency == 'UAH':
        return f"‚Ç¥{amount:.2f}"
    elif currency == 'USD':
        return f"${amount:.2f}"
    elif currency == 'RUB':
        return f"‚ÇΩ{amount:.2f}"
    elif currency == 'EUR':
        return f"‚Ç¨{amount:.2f}"
    else:
        return f"{amount:.2f} {currency}"

def convert_currency(amount: float, from_currency: str, to_currency: str) -> float:
    """–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∞–ª—é—Ç"""
    if from_currency == to_currency:
        return amount
    
    from_rate = CURRENCY_SETTINGS.get(from_currency, {}).get('exchange_rate', 1.0)
    to_rate = CURRENCY_SETTINGS.get(to_currency, {}).get('exchange_rate', 1.0)
    
    if from_rate and to_rate:
        return amount * (to_rate / from_rate)
    
    return amount

def get_available_credit_packages() -> list:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –∫—Ä–µ–¥–∏—Ç–æ–≤"""
    return list(CREDIT_PACKAGES.values())

def calculate_discount(original_price: float, discounted_price: float) -> int:
    """–†–∞—Å—á–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–∞ —Å–∫–∏–¥–∫–∏"""
    if original_price <= 0:
        return 0
    
    discount_percent = ((original_price - discounted_price) / original_price) * 100
    return int(discount_percent)

# –î–æ–±–∞–≤–ª—è–µ–º —Å–∫–∏–¥–∫–∏ –∫ –ø–∞–∫–µ—Ç–∞–º –∫—Ä–µ–¥–∏—Ç–æ–≤
for package_type, package in CREDIT_PACKAGES.items():
    if package_type != 'small':
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–∫–∏–¥–∫—É –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –±–∞–∑–æ–≤–æ–π —Ü–µ–Ω—ã
        base_price = CREDIT_PACKAGES['small']['price_per_credit'] * package['credits']
        package['original_price'] = base_price
        package['discount_percent'] = calculate_discount(base_price, package['price'])
        package['savings'] = base_price - package['price']
    else:
        package['original_price'] = package['price']
        package['discount_percent'] = 0
        package['savings'] = 0
