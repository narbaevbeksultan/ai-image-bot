#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ callback —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç Betatransfer
"""

import requests
import hashlib
import time

def test_callback():
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º callback —Å–∏—Å—Ç–µ–º—É...")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (–∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ Betatransfer)
    test_data = {
        'id': 'test_payment_123',
        'paymentSystem': 'card',
        'type': 'deposit',
        'orderId': f'test_order_{int(time.time())}',
        'orderAmount': '0.007',
        'paidAmount': '0.007',
        'amount': '0.007',
        'currency': 'UAH',
        'commission': '0.00',
        'createdAt': str(int(time.time())),
        'updatedAt': str(int(time.time())),
        'status': 'completed',
        'exchangeRate': '1.0',
        'receiverWallet': 'test_wallet',
        'beneficiaryName': 'Test User',
        'beneficiaryBank': 'test_bank'
    }
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å—å (MD5 –æ—Ç –≤—Å–µ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ + —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á)
    secret_key = "853d593cf0696f846edd26b079009c75"  # –í–∞—à —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ —Å–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –ø–æ–¥–ø–∏—Å–∏
    sorted_params = sorted(test_data.items())
    signature_string = ''.join(str(v) for _, v in sorted_params) + secret_key
    
    # –°–æ–∑–¥–∞–µ–º MD5 –ø–æ–¥–ø–∏—Å—å
    signature = hashlib.md5(signature_string.encode('utf-8')).hexdigest()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å –∫ –¥–∞–Ω–Ω—ã–º
    test_data['sign'] = signature
    
    print(f"üìù –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ: {test_data}")
    print(f"üîê –ü–æ–¥–ø–∏—Å—å: {signature}")
    print()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å –Ω–∞ callback endpoint
    callback_url = "https://3e73a8bfe0ff.ngrok-free.app/payment/callback"
    
    try:
        print(f"üåê –û—Ç–ø—Ä–∞–≤–ª—è–µ–º callback –Ω–∞: {callback_url}")
        response = requests.post(callback_url, data=test_data)
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"üìù –û—Ç–≤–µ—Ç: {response.text}")
        
        if response.status_code == 200:
            print("‚úÖ Callback –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
    
    print("\n" + "=" * 50)
    print("üéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ —Å callback —Å–µ—Ä–≤–µ—Ä–æ–º")
    print("2. –î–æ–∂–¥–∏—Ç–µ—Å—å –æ—Ç–≤–µ—Ç–æ–≤ –æ—Ç Betatransfer")
    print("3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞")

if __name__ == "__main__":
    test_callback()



