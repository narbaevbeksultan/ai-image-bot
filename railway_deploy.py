#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è –Ω–∞ Railway —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import os
import sys
import subprocess
import shutil
from datetime import datetime
from backup_database import backup_database

def check_git_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"""
    try:
        result = subprocess.run(['git', 'status', '--porcelain'], 
                              capture_output=True, text=True, check=True)
        
        if result.stdout.strip():
            print("üìù –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:")
            print(result.stdout)
            return False
        else:
            print("‚úÖ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã")
            return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Git: {e}")
        return False
    except FileNotFoundError:
        print("‚ùå Git –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Git —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return False

def create_backup():
    """–°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    if not os.path.exists("bot_analytics.db"):
        print("‚ö†Ô∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö bot_analytics.db –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        print("   –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –±–æ—Ç –µ—â–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–ª—Å—è")
        return True
    
    success = backup_database()
    if success:
        print("‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        return True
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏!")
        return False

def commit_changes():
    """–ö–æ–º–º–∏—Ç–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ Git"""
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
        subprocess.run(['git', 'add', '.'], check=True)
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        commit_message = f"Deploy: {timestamp} - Database persistence fix"
        
        subprocess.run(['git', 'commit', '-m', commit_message], check=True)
        print(f"‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã: {commit_message}")
        return True
        
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–º–º–∏—Ç–µ: {e}")
        return False

def push_to_github():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ GitHub"""
    try:
        subprocess.run(['git', 'push', 'origin', 'main'], check=True)
        print("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ GitHub")
        return True
        
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ GitHub: {e}")
        return False

def check_railway_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å Railway (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)"""
    print("üöÇ Railway –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Ö–≤–∞—Ç–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ GitHub")
    print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –¥–µ–ø–ª–æ—è –≤ Railway Dashboard")
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–ø–ª–æ—è"""
    print("üöÄ Railway Deploy Script")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Git
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Git —Å—Ç–∞—Ç—É—Å–∞...")
    if not check_git_status():
        print("‚ùå –ï—Å—Ç—å –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è. –°–Ω–∞—á–∞–ª–∞ –∑–∞–∫–æ–º–º–∏—Ç—å—Ç–µ –∏—Ö:")
        print("   git add .")
        print("   git commit -m 'Your commit message'")
        return False
    
    # 2. –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    print("\n2Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏...")
    if not create_backup():
        print("‚ö†Ô∏è  –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏...")
    
    # 3. –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    print("\n3Ô∏è‚É£ –ö–æ–º–º–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π...")
    if not commit_changes():
        return False
    
    # 4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ GitHub
    print("\n4Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ GitHub...")
    if not push_to_github():
        return False
    
    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º Railway
    print("\n5Ô∏è‚É£ Railway –¥–µ–ø–ª–æ–π...")
    check_railway_status()
    
    print("\nüéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print("   Railway –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç –±–æ—Ç–∞ —Å –Ω–æ–≤—ã–º –∫–æ–¥–æ–º")
    print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ Railway Dashboard")
    
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
