#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
–ó–∞–º–µ–Ω—è–µ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –Ω–∞ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—É—é.
"""

import re

def fix_parallel_generation():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—É –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    
    # –ß–∏—Ç–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª
    with open('bot.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤—ã–π —Ü–∏–∫–ª for idx, prompt in enumerate(safe_prompts, 1):
    # –∏ –∑–∞–º–µ–Ω—è–µ–º –µ–≥–æ –Ω–∞ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–∞—á–∞–ª–∞ —Ü–∏–∫–ª–∞
    pattern_start = r'(\s+media = \[\]\s*\n\s+for idx, prompt in enumerate\(safe_prompts, 1\):\s*\n\s+if idx > max_scenes:\s*\n\s+break)'
    
    # –ó–∞–º–µ–Ω–∞ –Ω–∞ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
    replacement = '''    media = []

    # –ü–ê–†–ê–õ–õ–ï–õ–¨–ù–ê–Ø –ì–ï–ù–ï–†–ê–¶–ò–Ø –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô
    # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏ –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    tasks = []
    for idx, prompt in enumerate(safe_prompts, 1):
        if idx > max_scenes:
            break
        # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        task = generate_single_image_async(idx, prompt, state, send_text)
        tasks.append(task)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –∑–∞–¥–∞—á–∏ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
    if tasks:
        if send_text:
            await send_text(f"üöÄ –ó–∞–ø—É—Å–∫–∞—é –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é {len(tasks)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
        
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–¥–∞—á
        results = await asyncio.gather(*tasks, return_exceptions=True)
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        for result in results:
            if isinstance(result, Exception):
                logging.error(f"–û—à–∏–±–∫–∞ –≤ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {result}")
                if send_text:
                    await send_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {result}")
                continue
            
            idx, success, image_url, caption, error = result
            
            if success and image_url:
                # –£—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                images.append(image_url)
                media.append(InputMediaPhoto(media=image_url, caption=caption))
                processed_count += 1
                
                print(f"üîç –î–æ–±–∞–≤–ª–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {idx}:")
                print(f"   image_url: {image_url}")
                print(f"   –¥–ª–∏–Ω–∞ image_url: {len(str(image_url)) if image_url else 'None'}")
                print(f"   –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç media: {media[-1].media}")
                print(f"   –¥–ª–∏–Ω–∞ media[-1].media: {len(str(media[-1].media)) if media[-1].media else 'None'}")
            else:
                # –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
                logging.error(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {idx}: {error}")
                if send_text:
                    await send_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {idx}: {error}")
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–¥ - –æ–Ω –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –≤—ã—à–µ
    # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –æ–±—Ä–∞–±–æ—Ç–∫—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤'''
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–º–µ–Ω—É —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è
    new_content = re.sub(pattern_start, replacement, content, count=1)
    
    # –ù–∞—Ö–æ–¥–∏–º –∏ —É–¥–∞–ª—è–µ–º –≤–µ—Å—å —Å—Ç–∞—Ä—ã–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–¥
    # –ò—â–µ–º –æ—Ç "        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫ –ø—Ä–æ–º–ø—Ç—É" –¥–æ "    if media and send_media:"
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤—Å–µ–≥–æ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥–∞
    old_code_pattern = r'(\s+# –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫ –ø—Ä–æ–º–ø—Ç—É.*?)(\s+if media and send_media:)'
    
    # –ó–∞–º–µ–Ω–∞ - –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ –∏ –∫–æ–Ω–µ—Ü
    old_code_replacement = r'\2'
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–º–µ–Ω—É
    new_content = re.sub(old_code_pattern, old_code_replacement, new_content, count=1, flags=re.DOTALL)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open('bot_fixed.py', 'w', encoding='utf-8') as f:
        f.write(new_content)
    
    print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã! –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª bot_fixed.py")
    print("üìù –û—Å–Ω–æ–≤–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:")
    print("   - –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è generate_single_image_async()")
    print("   - –ó–∞–º–µ–Ω–µ–Ω –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π —Ü–∏–∫–ª –Ω–∞ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é")
    print("   - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è asyncio.gather() –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è")
    print("   - –¢–µ–ø–µ—Ä—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –º–æ–≥—É—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ")

if __name__ == "__main__":
    fix_parallel_generation()
