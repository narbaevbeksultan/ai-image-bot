#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API –∫–ª—é—á–µ–π –∏ –∏—Ö —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
"""

import os
import replicate
import openai
from dotenv import load_dotenv

def test_environment_variables():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    load_dotenv()
    
    required_vars = [
        'TELEGRAM_BOT_TOKEN',
        'REPLICATE_API_TOKEN', 
        'OPENAI_API_KEY'
    ]
    
    missing_vars = []
    for var in required_vars:
        value = os.getenv(var)
        if value:
            # –°–∫—Ä—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 10 —Å–∏–º–≤–æ–ª–æ–≤
            masked_value = value[:10] + "..." if len(value) > 10 else value
            print(f"‚úÖ {var}: {masked_value}")
        else:
            print(f"‚ùå {var}: –ù–ï –ù–ê–ô–î–ï–ù")
            missing_vars.append(var)
    
    if missing_vars:
        print(f"\n‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {', '.join(missing_vars)}")
        return False
    else:
        print("\n‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω—ã")
        return True

def test_replicate_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç Replicate API"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Replicate API...")
    
    try:
        api_token = os.getenv('REPLICATE_API_TOKEN')
        if not api_token:
            print("‚ùå REPLICATE_API_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        client = replicate.Client(api_token=api_token)
        print("‚úÖ –ö–ª–∏–µ–Ω—Ç Replicate —Å–æ–∑–¥–∞–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç—É—é –º–æ–¥–µ–ª—å
        print("üîÑ –¢–µ—Å—Ç–∏—Ä—É—é –ø—Ä–æ—Å—Ç—É—é –º–æ–¥–µ–ª—å...")
        output = replicate.run(
            "replicate/hello-world",
            input={"text": "test"}
        )
        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –º–æ–¥–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç: {output}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º Ideogram
        print("üîÑ –¢–µ—Å—Ç–∏—Ä—É—é Ideogram...")
        try:
            ideogram_output = replicate.run(
                "ideogram-ai/ideogram-v3-turbo",
                input={"prompt": "simple test image"}
            )
            print(f"‚úÖ Ideogram —Ä–∞–±–æ—Ç–∞–µ—Ç: {ideogram_output}")
        except Exception as e:
            print(f"‚ö†Ô∏è Ideogram –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Replicate API: {e}")
        return False

def test_openai_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç OpenAI API"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OpenAI API...")
    
    try:
        api_key = os.getenv('OPENAI_API_KEY')
        if not api_key:
            print("‚ùå OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        client = openai.OpenAI(api_key=api_key)
        print("‚úÖ –ö–ª–∏–µ–Ω—Ç OpenAI —Å–æ–∑–¥–∞–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
        print("üîÑ –¢–µ—Å—Ç–∏—Ä—É—é OpenAI API...")
        response = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç! –û—Ç–≤–µ—Ç—å –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º."}
            ],
            max_tokens=10
        )
        
        reply = response.choices[0].message.content
        print(f"‚úÖ OpenAI API —Ä–∞–±–æ—Ç–∞–µ—Ç: {reply}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ OpenAI API: {e}")
        return False

def test_telegram_bot():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç Telegram Bot Token"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram Bot Token...")
    
    try:
        token = os.getenv('TELEGRAM_BOT_TOKEN')
        if not token:
            print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞
        if not token.startswith('5') or len(token) < 40:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç Telegram Bot Token")
            return False
        
        print("‚úÖ –§–æ—Ä–º–∞—Ç Telegram Bot Token –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        
        # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ Telegram API
        # –ù–æ –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å HTTP –∑–∞–ø—Ä–æ—Å
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram Bot Token: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∫–ª—é—á–µ–π –∏ –∏—Ö —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env_ok = test_environment_variables()
    
    if not env_ok:
        print("\n‚ùå –ù–µ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω—ã")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª .env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ Railway")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API
    replicate_ok = test_replicate_api()
    openai_ok = test_openai_api()
    telegram_ok = test_telegram_bot()
    
    print("\n" + "=" * 60)
    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"üîë –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: {'‚úÖ' if env_ok else '‚ùå'}")
    print(f"ü§ñ Replicate API: {'‚úÖ' if replicate_ok else '‚ùå'}")
    print(f"üß† OpenAI API: {'‚úÖ' if openai_ok else '‚ùå'}")
    print(f"üì± Telegram Bot: {'‚úÖ' if telegram_ok else '‚ùå'}")
    
    if all([env_ok, replicate_ok, openai_ok, telegram_ok]):
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ë–æ—Ç –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    else:
        print("\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
        
        if not replicate_ok:
            print("\nüí° –î–ª—è Replicate API:")
            print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–ª–∞–Ω—Å –Ω–∞ https://replicate.com/account/billing")
            print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω")
            
        if not openai_ok:
            print("\nüí° –î–ª—è OpenAI API:")
            print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–ª–∞–Ω—Å –Ω–∞ https://platform.openai.com/account/billing")
            print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω")

if __name__ == "__main__":
    main()
