#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
–ó–∞–º–µ–Ω—è–µ—Ç –ø—Ä–æ—Å—Ç—ã–µ –≤—ã–∑–æ–≤—ã replicate.run –Ω–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Å asyncio.wait_for
"""

import re

def fix_model_calls(file_path):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ –≤—ã–∑–æ–≤—ã replicate.run –¥–ª—è –º–æ–¥–µ–ª–µ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    
    with open(file_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    models = [
        "google/imagen-4-ultra",
        "luma/photon", 
        "recraft-ai/recraft-v3-svg",
        "bria-ai/bria-3.2"
    ]
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø—Ä–æ—Å—Ç—ã—Ö –≤—ã–∑–æ–≤–æ–≤ replicate.run
    pattern = r'(\s+)(output = replicate\.run\(\s*"([^"]+)"\s*,\s*input=\{[^}]+\}\s*\))'
    
    def replace_match(match):
        indent = match.group(1)
        old_call = match.group(2)
        model = match.group(3)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –º–æ–¥–µ–ª—å—é –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        if any(m in model for m in models):
            new_call = f'''{indent}loop = asyncio.get_event_loop()
{indent}output = await asyncio.wait_for(
{indent}    loop.run_in_executor(None, lambda: replicate.run(
{indent}        "{model}",
{indent}        input={{prompt_with_style, **replicate_params}}
{indent}    )),
{indent}    timeout=60.0
{indent})'''
            return new_call
        else:
            return old_call
    
    # –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
    new_content = re.sub(pattern, replace_match, content)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É TimeoutError –¥–ª—è –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –±–ª–æ–∫–æ–≤
    for model_name in ["Google Imagen 4 Ultra", "Luma Photon", "Recraft AI", "Bria 3.2"]:
        # –ò—â–µ–º –±–ª–æ–∫–∏ —Å except Exception as e:
        pattern = r'(\s+elif selected_model == \'' + model_name + r'\':[^}]+except Exception as e:)'
        
        def add_timeout_handling(match):
            block = match.group(1)
            # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É TimeoutError –ø–µ—Ä–µ–¥ except Exception
            timeout_handler = f'''{indent}                except asyncio.TimeoutError:
{indent}                    await send_text(update, context, "‚è∞ –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ {model_name} (60 —Å–µ–∫)")
{indent}                    return
{indent}                '''
            return block.replace("except Exception as e:", timeout_handler + "except Exception as e:")
        
        new_content = re.sub(pattern, add_timeout_handling, new_content)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open(file_path, 'w', encoding='utf-8') as f:
        f.write(new_content)
    
    print(f"‚úÖ –§–∞–π–ª {file_path} –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!")
    print("üîß –í—Å–µ –º–æ–¥–µ–ª–∏ —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É—é—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –≤—ã–∑–æ–≤—ã —Å —Ç–∞–π–º–∞—É—Ç–æ–º")

if __name__ == "__main__":
    fix_model_calls("bot.py")
    print("\nüéâ –í—Å–µ –º–æ–¥–µ–ª–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã! –¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ:")
    print("1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –Ω–∞ Railway")
    print("2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
