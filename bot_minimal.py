import logging
import asyncio
from typing import Dict, Any

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, BotCommand
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, MessageHandler, ContextTypes, filters

import os
from dotenv import load_dotenv

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
USER_STATE = {}

# ============================================================================
# TELEGRAM HANDLERS
# ============================================================================

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_id = update.effective_user.id
    user_name = update.effective_user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    USER_STATE[user_id] = {'step': 'main_menu'}
    
    welcome_text = f"""
üéâ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_name}!**

–Ø - AI Image Bot, –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞.

üÜì **–ë–µ—Å–ø–ª–∞—Ç–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ:**
‚Ä¢ 3 –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Ä¢ 3 —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

üí° **–ß—Ç–æ —è —É–º–µ—é:**
‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é
‚Ä¢ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
‚Ä¢ –†–∞–±–æ—Ç–∞—Ç—å —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏ –∏ –º–æ–¥–µ–ª—è–º–∏

üöÄ **–ù–∞—á–Ω–∏—Ç–µ —Å —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è!**

üîÑ –ï—Å–ª–∏ –±–æ—Ç –∑–∞–≤–∏—Å - –Ω–∞–ø–∏—à–∏—Ç–µ /start
üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - /stats
"""
    
    keyboard = [
        [InlineKeyboardButton("üé® –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç", callback_data="create_content")],
        [InlineKeyboardButton("üñºÔ∏è –°–æ–∑–¥–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", callback_data="create_simple_images")],
        [InlineKeyboardButton("ü™ô –ö—É–ø–∏—Ç—å –∫—Ä–µ–¥–∏—Ç—ã", callback_data="credit_packages")],
        [InlineKeyboardButton("üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="user_stats")],
        [InlineKeyboardButton("‚ùì –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è", callback_data="how_to_use")],
        [InlineKeyboardButton("üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support")]
    ]
    
    await update.message.reply_text(
        welcome_text,
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏"""
    help_text = """
‚ùì **–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:**

1. **–°–æ–∑–¥–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:**
   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç"
   ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
   ‚Ä¢ –û–ø–∏—à–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å
   ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å –∏ –º–æ–¥–µ–ª—å
   ‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç!

2. **–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:**
   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
   ‚Ä¢ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
   ‚Ä¢ –û–ø–∏—à–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
   ‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!

3. **–ü–æ–∫—É–ø–∫–∞ –∫—Ä–µ–¥–∏—Ç–æ–≤:**
   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "–ö—É–ø–∏—Ç—å –∫—Ä–µ–¥–∏—Ç—ã"
   ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç
   ‚Ä¢ –û–ø–ª–∞—Ç–∏—Ç–µ —á–µ—Ä–µ–∑ Betatransfer
   ‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ –∫—Ä–µ–¥–∏—Ç—ã!

üí° **–°–æ–≤–µ—Ç—ã:**
‚Ä¢ –ë—É–¥—å—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã –≤ –æ–ø–∏—Å–∞–Ω–∏—è—Ö
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
‚Ä¢ –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å–æ —Å—Ç–∏–ª—è–º–∏

üîÑ –ï—Å–ª–∏ –±–æ—Ç –∑–∞–≤–∏—Å - –Ω–∞–ø–∏—à–∏—Ç–µ /start
üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - /stats
"""
    
    keyboard = [
        [InlineKeyboardButton("üé® –ù–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ", callback_data="create_content")],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="main_menu")]
    ]
    
    await update.message.reply_text(
        help_text,
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏"""
    query = update.callback_query
    await query.answer()
    
    user_id = update.effective_user.id
    data = query.data
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    if data == "create_content":
        await show_format_selection(update, context)
    
    elif data == "create_simple_images":
        # –î–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–∏—Ä–∞–µ–º –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é
        USER_STATE[user_id] = {'step': 'simple_orientation', 'format': '–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è'}
        
        keyboard = [
            [InlineKeyboardButton("üì± –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ (9:16)", callback_data="simple_orientation:vertical")],
            [InlineKeyboardButton("‚¨ú –ö–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ (1:1)", callback_data="simple_orientation:square")]
        ]
        
        await query.edit_message_text(
            "üìê **–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:**",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    
    elif data == "main_menu":
        await start(update, context)
    
    elif data == "how_to_use":
        await show_help(update, context)
    
    elif data == "support":
        await show_support(update, context)
    
    elif data == "user_stats":
        await show_user_stats(update, context)
    
    elif data == "credit_packages":
        await show_credit_packages(update, context)
    
    else:
        await query.edit_message_text("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ /start")

async def show_format_selection(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ñ–æ—Ä–º–∞—Ç–∞ —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π"""
    user_id = update.effective_user.id
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    USER_STATE[user_id] = {'step': 'format_selection'}
    
    format_text = """
üé® **–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞:**

üñºÔ∏è **–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è** - —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é
üé¨ **–í–∏–¥–µ–æ** - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ—Ä–æ—Ç–∫–∏—Ö –≤–∏–¥–µ–æ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)
‚úèÔ∏è **–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ** - –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

üí° **–°–æ–≤–µ—Ç:** –ù–∞—á–Ω–∏—Ç–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π - —ç—Ç–æ —Å–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!

üÜì **–ë–µ—Å–ø–ª–∞—Ç–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ:**
‚Ä¢ 3 –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Ä¢ 3 —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
"""
    
    keyboard = [
        [InlineKeyboardButton("üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", callback_data="format:–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")],
        [InlineKeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", callback_data="format:—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")],
        [InlineKeyboardButton("üé¨ –í–∏–¥–µ–æ (—Å–∫–æ—Ä–æ)", callback_data="video_generation")],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="main_menu")]
    ]
    
    await update.callback_query.edit_message_text(
        format_text,
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def show_help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É"""
    help_text = """
‚ùì **–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:**

1. **–°–æ–∑–¥–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:**
   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç"
   ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
   ‚Ä¢ –û–ø–∏—à–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å
   ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å –∏ –º–æ–¥–µ–ª—å
   ‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç!

2. **–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:**
   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
   ‚Ä¢ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
   ‚Ä¢ –û–ø–∏—à–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
   ‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!

3. **–ü–æ–∫—É–ø–∫–∞ –∫—Ä–µ–¥–∏—Ç–æ–≤:**
   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "–ö—É–ø–∏—Ç—å –∫—Ä–µ–¥–∏—Ç—ã"
   ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç
   ‚Ä¢ –û–ø–ª–∞—Ç–∏—Ç–µ —á–µ—Ä–µ–∑ Betatransfer
   ‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ –∫—Ä–µ–¥–∏—Ç—ã!

üí° **–°–æ–≤–µ—Ç—ã:**
‚Ä¢ –ë—É–¥—å—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã –≤ –æ–ø–∏—Å–∞–Ω–∏—è—Ö
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
‚Ä¢ –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å–æ —Å—Ç–∏–ª—è–º–∏

üîÑ –ï—Å–ª–∏ –±–æ—Ç –∑–∞–≤–∏—Å - –Ω–∞–ø–∏—à–∏—Ç–µ /start
üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - /stats
"""
    
    keyboard = [
        [InlineKeyboardButton("üé® –ù–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ", callback_data="create_content")],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="main_menu")]
    ]
    
    await update.callback_query.edit_message_text(
        help_text,
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def show_support(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ"""
    support_text = """
üìû **–ü–æ–¥–¥–µ—Ä–∂–∫–∞**

–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –∏–ª–∏ –≤–æ–ø—Ä–æ—Å—ã:

üí¨ **Telegram:** @your_support_username
üìß **Email:** support@yourdomain.com
üåê **–°–∞–π—Ç:** https://yourdomain.com

‚è∞ **–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:** 24/7

üîß **–ß–∞—Å—Ç—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:**
‚Ä¢ –ë–æ—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç ‚Üí –Ω–∞–ø–∏—à–∏—Ç–µ /start
‚Ä¢ –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ‚Üí –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø—Ä–æ–º–ø—Ç
‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –æ–ø–ª–∞—Ç–æ–π ‚Üí –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É

üí° **–°–æ–≤–µ—Ç:** –ß–µ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–ø–∏—à–µ—Ç–µ –ø—Ä–æ–±–ª–µ–º—É, —Ç–µ–º –±—ã—Å—Ç—Ä–µ–µ –ø–æ–ª—É—á–∏—Ç–µ –ø–æ–º–æ—â—å!
"""
    
    keyboard = [
        [InlineKeyboardButton("üé® –ù–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ", callback_data="create_content")],
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ]
    
    await update.callback_query.edit_message_text(
        support_text,
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def show_user_stats(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = update.effective_user.id
    
    # –ü—Ä–æ—Å—Ç–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–µ–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    stats_text = f"""
üìä **–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**

üé® **–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
‚Ä¢ –í—Å–µ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–π: 0
‚Ä¢ –£—Å–ø–µ—à–Ω—ã—Ö: 0
‚Ä¢ –ù–µ—É–¥–∞—á–Ω—ã—Ö: 0

ü™ô **–ö—Ä–µ–¥–∏—Ç—ã:**
‚Ä¢ –ë–∞–ª–∞–Ω—Å: 3 (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ)
‚Ä¢ –ü–æ—Ç—Ä–∞—á–µ–Ω–æ: 0
‚Ä¢ –ö—É–ø–ª–µ–Ω–æ: 0

üìà **–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:**
‚Ä¢ –ü–µ—Ä–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –°–µ–≥–æ–¥–Ω—è
‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: –°–µ–π—á–∞—Å

üí° **–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞!**
"""
    
    keyboard = [
        [InlineKeyboardButton("üé® –°–æ–∑–¥–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", callback_data="create_content")],
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ]
    
    await update.callback_query.edit_message_text(
        stats_text,
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def show_credit_packages(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–∞–∫–µ—Ç—ã –∫—Ä–µ–¥–∏—Ç–æ–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏"""
    user_id = update.effective_user.id
    
    credit_text = f"""
ü™ô **–ü–∞–∫–µ—Ç—ã –∫—Ä–µ–¥–∏—Ç–æ–≤**

üí∞ **–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:** 3 –∫—Ä–µ–¥–∏—Ç–∞ (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ)

üì¶ **–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞–∫–µ—Ç—ã:**

ü•â **–ú–∞–ª—ã–π –ø–∞–∫–µ—Ç**
‚Ä¢ 200 –∫—Ä–µ–¥–∏—Ç–æ–≤
‚Ä¢ –¶–µ–Ω–∞: ‚ÇΩ1,129
‚Ä¢ –•–≤–∞—Ç–∏—Ç –Ω–∞ ~67 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π

ü•à **–°—Ä–µ–¥–Ω–∏–π –ø–∞–∫–µ—Ç**
‚Ä¢ 5,000 –∫—Ä–µ–¥–∏—Ç–æ–≤  
‚Ä¢ –¶–µ–Ω–∞: ‚ÇΩ2,420
‚Ä¢ –•–≤–∞—Ç–∏—Ç –Ω–∞ ~1,667 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π

ü•á **–ë–æ–ª—å—à–æ–π –ø–∞–∫–µ—Ç**
‚Ä¢ 10,000 –∫—Ä–µ–¥–∏—Ç–æ–≤
‚Ä¢ –¶–µ–Ω–∞: ‚ÇΩ4,030
‚Ä¢ –•–≤–∞—Ç–∏—Ç –Ω–∞ ~3,333 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π

üí° **–°—Ç–æ–∏–º–æ—Å—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:** ~3 –∫—Ä–µ–¥–∏—Ç–∞ –∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ

‚ö†Ô∏è **–í–Ω–∏–º–∞–Ω–∏–µ:** –°–∏—Å—Ç–µ–º–∞ –ø–ª–∞—Ç–µ–∂–µ–π –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!
"""
    
    keyboard = [
        [InlineKeyboardButton("ü•â –ú–∞–ª—ã–π –ø–∞–∫–µ—Ç (200 –∫—Ä–µ–¥–∏—Ç–æ–≤)", callback_data="buy_credits:small")],
        [InlineKeyboardButton("ü•à –°—Ä–µ–¥–Ω–∏–π –ø–∞–∫–µ—Ç (5,000 –∫—Ä–µ–¥–∏—Ç–æ–≤)", callback_data="buy_credits:medium")],
        [InlineKeyboardButton("ü•á –ë–æ–ª—å—à–æ–π –ø–∞–∫–µ—Ç (10,000 –∫—Ä–µ–¥–∏—Ç–æ–≤)", callback_data="buy_credits:large")],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="main_menu")]
    ]
    
    await update.callback_query.edit_message_text(
        credit_text,
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def text_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_id = update.effective_user.id
    state = USER_STATE.get(user_id, {})
    
    if state.get('step') == 'image_prompt':
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        prompt = update.message.text
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø—Ä–æ–º–ø—Ç–∞
        if not is_safe_prompt(prompt):
            await update.message.reply_text(
                "‚ùå –ü—Ä–æ–º–ø—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –≤–∞—Ä–∏–∞–Ω—Ç.",
                reply_markup=InlineKeyboardMarkup([[
                    InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="main_menu")
                ]])
            )
            return
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–º–ø—Ç –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É –º–æ–¥–µ–ª–∏
        USER_STATE[user_id]['prompt'] = prompt
        USER_STATE[user_id]['step'] = 'model_selection'
        
        await update.message.reply_text(
            f"‚úÖ –ü—Ä–æ–º–ø—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {prompt}\n\n–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:",
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("üì± Ideogram", callback_data="image_gen_model:Ideogram"),
                InlineKeyboardButton("‚ö° Bytedance", callback_data="image_gen_model:Bytedance (Seedream-3)"),
                InlineKeyboardButton("üî¨ Google Imagen", callback_data="image_gen_model:Google Imagen 4 Ultra")
            ]])
        )
    
    else:
        # –û–±—ã—á–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await update.message.reply_text(
            "üëã –ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º.",
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("üöÄ –ù–∞—á–∞—Ç—å", callback_data="main_menu")
            ]])
        )

def is_safe_prompt(prompt: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø—Ä–æ–º–ø—Ç–∞"""
    forbidden_words = [
        'nude', 'naked', 'sex', 'porn', 'nsfw', 'adult', 'explicit',
        'violence', 'blood', 'gore', 'weapon', 'gun', 'knife',
        'hate', 'racist', 'discrimination', 'terrorist'
    ]
    
    prompt_lower = prompt.lower()
    return not any(word in prompt_lower for word in forbidden_words)

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    error = context.error
    user_id = update.effective_user.id if update and update.effective_user else None
    
    # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
    logging.error(f"üîç –û—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ: {error}")
    logging.error(f"üîç {type(error).__name__}: {error}")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if update and update.effective_message:
        try:
            error_text = """
‚ùå **–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞**

–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:

1. üîÑ –ù–∞–ø–∏—Å–∞—Ç—å /start –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
2. üìû –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –ø–æ–¥–¥–µ—Ä–∂–∫–µ
3. ‚è∞ –ü–æ–¥–æ–∂–¥–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç

–ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º!
"""
            
            keyboard = [
                [InlineKeyboardButton("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å", callback_data="main_menu")],
                [InlineKeyboardButton("üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support")],
                [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
            ]
            
            await update.effective_message.reply_text(
                error_text,
                reply_markup=InlineKeyboardMarkup(keyboard)
            )
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ: {e}")

async def setup_commands(application):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∞–Ω–¥ –º–µ–Ω—é"""
    commands = [
        BotCommand("start", "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
        BotCommand("help", "‚ùì –ü–æ–º–æ—â—å"),
        BotCommand("stats", "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"),
        BotCommand("my_id", "üÜî –ú–æ–π ID")
    ]
    
    await application.bot.set_my_commands(commands)

# ============================================================================
# MAIN FUNCTION
# ============================================================================

def main():
    import os
    from dotenv import load_dotenv
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    load_dotenv()
    
    TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
    if not TOKEN:
        print("‚ùå –û–®–ò–ë–ö–ê: TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        print("üìù –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_BOT_TOKEN")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ setup_env.py –¥–ª—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π")
        return
    
    app = ApplicationBuilder().token(TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    app.add_handler(CommandHandler('start', start))
    app.add_handler(CommandHandler('help', help_command))
    app.add_handler(CallbackQueryHandler(button_handler))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, text_handler))
    app.add_handler(MessageHandler(filters.PHOTO, text_handler))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    app.add_error_handler(error_handler)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –º–µ–Ω—é –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    app.post_init = setup_commands
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ —Å polling
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ —Å polling")
    
    try:
        app.run_polling()
    except KeyboardInterrupt:
        print("üëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

if __name__ == '__main__':
    main()
