#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å Seedream-3
"""
import os
import replicate
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º API —Ç–æ–∫–µ–Ω
replicate_token = os.getenv('REPLICATE_API_TOKEN')
if not replicate_token:
    print("‚ùå REPLICATE_API_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    exit(1)

print(f"‚úÖ REPLICATE_API_TOKEN –Ω–∞–π–¥–µ–Ω: {replicate_token[:20]}...")

print("üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º Seedream-3...")

try:
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    output = replicate.run(
        "bytedance/seedream-3",
        input={
            "prompt": "beautiful woman in red dress, photorealistic, high quality",
            "aspect_ratio": "1:1"
        }
    )
    
    print(f"üîç Output —Ç–∏–ø: {type(output)}")
    print(f"üîç Output –∑–Ω–∞—á–µ–Ω–∏–µ: {output}")
    print(f"üîç Output dir(): {dir(output) if hasattr(output, '__dict__') else '–ù–µ—Ç –∞—Ç—Ä–∏–±—É—Ç–æ–≤'}")
    
    # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è URL
    if hasattr(output, 'url'):
        print(f"üîç output.url: {output.url}")
        print(f"üîç –¢–∏–ø output.url: {type(output.url)}")
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º –≤—ã–∑–≤–∞—Ç—å –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏—é
        try:
            url_result = output.url()
            print(f"üîç output.url(): {url_result}")
        except Exception as e:
            print(f"üîç output.url() –æ—à–∏–±–∫–∞: {e}")
    
    if hasattr(output, '__getitem__'):
        try:
            print(f"üîç output[0]: {output[0]}")
        except Exception as e:
            print(f"üîç output[0] –æ—à–∏–±–∫–∞: {e}")
    
    if isinstance(output, (list, tuple)):
        print(f"üîç output –∫–∞–∫ —Å–ø–∏—Å–æ–∫/–∫–æ—Ä—Ç–µ–∂: {len(output)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
        for i, item in enumerate(output):
            print(f"üîç output[{i}]: {item} (—Ç–∏–ø: {type(item)})")
    
    # –ü—Ä–æ–±—É–µ–º str()
    str_output = str(output)
    print(f"üîç str(output): {str_output}")
    print(f"üîç –î–ª–∏–Ω–∞ str(output): {len(str_output)}")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
